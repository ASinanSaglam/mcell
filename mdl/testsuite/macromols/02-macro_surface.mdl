/****************************************************************************
 * Test 02: Simple surface macromolecules.
 *
 *    This test is analogous to test #1, but using surface molecules.  Counting
 *    encompasses considerably more options for surface complexes, due to the
 *    additional dimensions added by orientations.  As a result, this includes
 *    a much more comprehensive collection of counts than test #1.  Again, I'll
 *    update this later with expected equilibria, but also with a set of rules
 *    I wrote up once upon a time for inter-count validation.  There is a
 *    fairly strict set of rules we can use for checking that the counts are
 *    internally consistent.
 *
 * Author: Jed Wing <jed@salk.edu>
 * Date:   2008-04-04
 ****************************************************************************/

basename = "02-macro_surface"
countdir = "dat/" & basename & "/"
vizdir   = "./viz_dat/" & basename & "/"
sprintf(seed, "%04g", SEED)
dt = 1e-6
iterations=300000

INCLUDE_FILE="parameters.mdl"

TIME_STEP = dt
ITERATIONS = iterations
GRID_DENSITY = 15000
ACCURATE_3D_REACTIONS = FALSE

CHECKPOINT_OUTFILE=basename & ".cp"
CHECKPOINT_INFILE=basename & ".cp"
CHECKPOINT_ITERATIONS=30000

PARTITION_X = [[-1.0001 TO 1.00001 STEP 0.04]]
PARTITION_Y = [[-1.0001 TO 1.00001 STEP 0.04]]
PARTITION_Z = [[-1.0001 TO 1.00001 STEP 0.04]]

DEFINE_MOLECULES {
  camkii_subunit  { DIFFUSION_CONSTANT_2D = 0 }
  camkii_subunitB { DIFFUSION_CONSTANT_2D = 0 }
  cam             { DIFFUSION_CONSTANT_3D = cam_diffusion }
}

DEFINE_COMPLEX_MOLECULE camkii {
  NUMBER_OF_SUBUNITS = [2, 6]
  SUBUNIT[  1, 2:4] = camkii_subunit;
  SUBUNIT[1:2, 1:3] = camkii_subunit;
  SUBUNIT[1:2,   5] = camkii_subunit;
  SUBUNIT[  1,   6] = camkii_subunitB;
  SUBUNIT[  2,   6] = camkii_subunitB;
  SUBUNIT[  2,   4] = camkii_subunitB;
  SUBUNIT[  1, 1:6] = camkii_subunit'
  SUBUNIT[  2, 1:6] = camkii_subunit,
  SHAPE {
    SUBUNIT[1, 1] = [-.10,  .0000, 0]
    SUBUNIT[1, 2] = [-.05,  .0866, 0]
    SUBUNIT[1, 3] = [ .05,  .0866, 0]
    SUBUNIT[1, 4] = [ .10,  .0000, 0]
    SUBUNIT[1, 5] = [ .05, -.0866, 0]
    SUBUNIT[1, 6] = [-.05, -.0866, 0]

    SUBUNIT[2, 1] = [-.10,  .0000, 0]
    SUBUNIT[2, 2] = [-.05,  .0866, 0]
    SUBUNIT[2, 3] = [ .05,  .0866, 0]
    SUBUNIT[2, 4] = [ .10,  .0000, 0]
    SUBUNIT[2, 5] = [ .05, -.0866, 0]
    SUBUNIT[2, 6] = [-.05, -.0866, 0]
  }
  SUBUNIT_RELATIONSHIPS {
    ring_negative = [ 0, -1]
    ring_positive = [ 0, +1]
    dimer_partner = [+1,  0]
  }
  RATE_RULES {
    coop_binding_rate {
      dimer_partner != camkii_subunit : fw_rate * TMP_spec_F
      DEFAULT : fw_rate
    }
    coop_unbinding_rate {
      dimer_partner != camkii_subunit : bw_rate * TMP_spec_B
      DEFAULT : bw_rate
    }
  }
}

DEFINE_REACTIONS {
  (camkii_subunit') + cam; <-> (camkii_subunitB;)   [> COMPLEX_RATE camkii coop_binding_rate,
                                                     < COMPLEX_RATE camkii coop_unbinding_rate]
}

mainbox OBJECT {
  b BOX {
    CORNERS = [ -1.0, -1.0, -1.0 ], [ 1.0, 1.0, 1.0 ]
  }
}

INSTANTIATE world OBJECT
{
  mainbox OBJECT mainbox {
  }

  rs1 RELEASE_SITE {
    SHAPE = world.mainbox.b[ALL]
    MOLECULE = camkii'
    NUMBER_TO_RELEASE = 100
  }

  rs2 RELEASE_SITE {
    SHAPE = world.mainbox.b[ALL]
    MOLECULE = cam
    NUMBER_TO_RELEASE = num_cam
  }
}

VIZ_OUTPUT
{
  MODE = DREAMM_V3_GROUPED
  FILENAME = vizdir & "world." & seed
  MOLECULES {
    NAME_LIST { ALL_MOLECULES }
    ITERATION_NUMBERS { ALL_DATA @ [[0 TO 100000000 STEP 100]] }
  }
  MESHES {
    NAME_LIST { ALL_MESHES }
    ITERATION_NUMBERS { ALL_DATA @ [0] }
  }
}

REACTION_DATA_OUTPUT
{
  ITERATION_LIST = [[0 TO 9999 STEP 20], [10000 TO 250000 STEP 10000], [250001 TO 1250000 STEP 1]]

  /* 00 counts (non-inverted) */
  {COUNT[SUBUNIT{camkii : camkii_subunit  [dimer_partner==camkii_subunit  ]}, WORLD]} => countdir & "coop_m00xx." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunit '[dimer_partner==camkii_subunit  ]}, WORLD]} => countdir & "coop_m00ux." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunit ,[dimer_partner==camkii_subunit  ]}, WORLD]} => countdir & "coop_m00dx." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunit  [dimer_partner==camkii_subunit ']}, WORLD]} => countdir & "coop_m00xu." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunit  [dimer_partner==camkii_subunit ,]}, WORLD]} => countdir & "coop_m00xd." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunit '[dimer_partner==camkii_subunit ,]}, WORLD]} => countdir & "coop_m00ud." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunit ,[dimer_partner==camkii_subunit ']}, WORLD]} => countdir & "coop_m00du." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunit '[dimer_partner==camkii_subunit ']}, WORLD]} => countdir & "coop_m00uu." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunit ,[dimer_partner==camkii_subunit ,]}, WORLD]} => countdir & "coop_m00dd." & seed & ".dat"

  /* 00 counts (inverted) */
  {COUNT[SUBUNIT{camkii : camkii_subunit  [dimer_partner!=camkii_subunitB ]}, WORLD]} => countdir & "coop_im00xx." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunit '[dimer_partner!=camkii_subunitB ]}, WORLD]} => countdir & "coop_im00ux." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunit ,[dimer_partner!=camkii_subunitB ]}, WORLD]} => countdir & "coop_im00dx." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunit  [dimer_partner!=camkii_subunitB']}, WORLD]} => countdir & "coop_im00xu." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunit  [dimer_partner!=camkii_subunitB,]}, WORLD]} => countdir & "coop_im00xd." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunit '[dimer_partner!=camkii_subunitB,]}, WORLD]} => countdir & "coop_im00ud." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunit ,[dimer_partner!=camkii_subunitB']}, WORLD]} => countdir & "coop_im00du." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunit '[dimer_partner!=camkii_subunitB']}, WORLD]} => countdir & "coop_im00uu." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunit ,[dimer_partner!=camkii_subunitB,]}, WORLD]} => countdir & "coop_im00dd." & seed & ".dat"

  /* 01 counts (non-inverted) */
  {COUNT[SUBUNIT{camkii : camkii_subunit  [dimer_partner==camkii_subunitB ]}, WORLD]} => countdir & "coop_m01xx." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunit '[dimer_partner==camkii_subunitB ]}, WORLD]} => countdir & "coop_m01ux." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunit ,[dimer_partner==camkii_subunitB ]}, WORLD]} => countdir & "coop_m01dx." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunit  [dimer_partner==camkii_subunitB']}, WORLD]} => countdir & "coop_m01xu." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunit  [dimer_partner==camkii_subunitB,]}, WORLD]} => countdir & "coop_m01xd." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunit '[dimer_partner==camkii_subunitB,]}, WORLD]} => countdir & "coop_m01ud." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunit ,[dimer_partner==camkii_subunitB']}, WORLD]} => countdir & "coop_m01du." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunit '[dimer_partner==camkii_subunitB']}, WORLD]} => countdir & "coop_m01uu." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunit ,[dimer_partner==camkii_subunitB,]}, WORLD]} => countdir & "coop_m01dd." & seed & ".dat"

  /* 01 counts (inverted) */
  {COUNT[SUBUNIT{camkii : camkii_subunit  [dimer_partner!=camkii_subunit  ]}, WORLD]} => countdir & "coop_im01xx." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunit '[dimer_partner!=camkii_subunit  ]}, WORLD]} => countdir & "coop_im01ux." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunit ,[dimer_partner!=camkii_subunit  ]}, WORLD]} => countdir & "coop_im01dx." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunit  [dimer_partner!=camkii_subunit ']}, WORLD]} => countdir & "coop_im01xu." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunit  [dimer_partner!=camkii_subunit ,]}, WORLD]} => countdir & "coop_im01xd." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunit '[dimer_partner!=camkii_subunit ,]}, WORLD]} => countdir & "coop_im01ud." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunit ,[dimer_partner!=camkii_subunit ']}, WORLD]} => countdir & "coop_im01du." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunit '[dimer_partner!=camkii_subunit ']}, WORLD]} => countdir & "coop_im01uu." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunit ,[dimer_partner!=camkii_subunit ,]}, WORLD]} => countdir & "coop_im01dd." & seed & ".dat"

  /* 10 counts (non-inverted) */
  {COUNT[SUBUNIT{camkii : camkii_subunitB [dimer_partner==camkii_subunit  ]}, WORLD]} => countdir & "coop_m10xx." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunitB'[dimer_partner==camkii_subunit  ]}, WORLD]} => countdir & "coop_m10ux." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunitB,[dimer_partner==camkii_subunit  ]}, WORLD]} => countdir & "coop_m10dx." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunitB [dimer_partner==camkii_subunit ']}, WORLD]} => countdir & "coop_m10xu." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunitB [dimer_partner==camkii_subunit ,]}, WORLD]} => countdir & "coop_m10xd." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunitB'[dimer_partner==camkii_subunit ,]}, WORLD]} => countdir & "coop_m10ud." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunitB,[dimer_partner==camkii_subunit ']}, WORLD]} => countdir & "coop_m10du." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunitB'[dimer_partner==camkii_subunit ']}, WORLD]} => countdir & "coop_m10uu." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunitB,[dimer_partner==camkii_subunit ,]}, WORLD]} => countdir & "coop_m10dd." & seed & ".dat"

  /* 10 counts (inverted) */
  {COUNT[SUBUNIT{camkii : camkii_subunitB [dimer_partner!=camkii_subunitB ]}, WORLD]} => countdir & "coop_im10xx." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunitB'[dimer_partner!=camkii_subunitB ]}, WORLD]} => countdir & "coop_im10ux." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunitB,[dimer_partner!=camkii_subunitB ]}, WORLD]} => countdir & "coop_im10dx." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunitB [dimer_partner!=camkii_subunitB']}, WORLD]} => countdir & "coop_im10xu." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunitB [dimer_partner!=camkii_subunitB,]}, WORLD]} => countdir & "coop_im10xd." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunitB'[dimer_partner!=camkii_subunitB,]}, WORLD]} => countdir & "coop_im10ud." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunitB,[dimer_partner!=camkii_subunitB']}, WORLD]} => countdir & "coop_im10du." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunitB'[dimer_partner!=camkii_subunitB']}, WORLD]} => countdir & "coop_im10uu." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunitB,[dimer_partner!=camkii_subunitB,]}, WORLD]} => countdir & "coop_im10dd." & seed & ".dat"

  /* 11 counts (non-inverted) */
  {COUNT[SUBUNIT{camkii : camkii_subunitB [dimer_partner==camkii_subunitB ]}, WORLD]} => countdir & "coop_m11xx." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunitB'[dimer_partner==camkii_subunitB ]}, WORLD]} => countdir & "coop_m11ux." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunitB,[dimer_partner==camkii_subunitB ]}, WORLD]} => countdir & "coop_m11dx." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunitB [dimer_partner==camkii_subunitB']}, WORLD]} => countdir & "coop_m11xu." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunitB [dimer_partner==camkii_subunitB,]}, WORLD]} => countdir & "coop_m11xd." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunitB'[dimer_partner==camkii_subunitB,]}, WORLD]} => countdir & "coop_m11ud." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunitB,[dimer_partner==camkii_subunitB']}, WORLD]} => countdir & "coop_m11du." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunitB'[dimer_partner==camkii_subunitB']}, WORLD]} => countdir & "coop_m11uu." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunitB,[dimer_partner==camkii_subunitB,]}, WORLD]} => countdir & "coop_m11dd." & seed & ".dat"

  /* 11 counts (inverted) */
  {COUNT[SUBUNIT{camkii : camkii_subunitB [dimer_partner!=camkii_subunit  ]}, WORLD]} => countdir & "coop_im11xx." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunitB'[dimer_partner!=camkii_subunit  ]}, WORLD]} => countdir & "coop_im11ux." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunitB,[dimer_partner!=camkii_subunit  ]}, WORLD]} => countdir & "coop_im11dx." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunitB [dimer_partner!=camkii_subunit ']}, WORLD]} => countdir & "coop_im11xu." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunitB [dimer_partner!=camkii_subunit ,]}, WORLD]} => countdir & "coop_im11xd." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunitB'[dimer_partner!=camkii_subunit ,]}, WORLD]} => countdir & "coop_im11ud." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunitB,[dimer_partner!=camkii_subunit ']}, WORLD]} => countdir & "coop_im11du." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunitB'[dimer_partner!=camkii_subunit ']}, WORLD]} => countdir & "coop_im11uu." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunitB,[dimer_partner!=camkii_subunit ,]}, WORLD]} => countdir & "coop_im11dd." & seed & ".dat"

  /* Traditional counts */
  {COUNT[camkii_subunit, WORLD]}               => countdir & "coop_camkii."    & seed & ".dat"
  {COUNT["camkii_subunit,", world.mainbox.b]}  => countdir & "coop_camkii_d."  & seed & ".dat"
  {COUNT["camkii_subunit'", world.mainbox.b]}  => countdir & "coop_camkii_u."  & seed & ".dat"
  {COUNT[camkii_subunitB, WORLD]}              => countdir & "coop_camkiiB."   & seed & ".dat"
  {COUNT["camkii_subunitB,", world.mainbox.b]} => countdir & "coop_camkiiB_d." & seed & ".dat"
  {COUNT["camkii_subunitB'", world.mainbox.b]} => countdir & "coop_camkiiB_u." & seed & ".dat"
  {COUNT[cam, WORLD]}                          => countdir & "coop_cam."       & seed & ".dat"
}
