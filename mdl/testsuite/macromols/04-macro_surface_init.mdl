/****************************************************************************
 * Test 04: Surface macromolecule init by density/number.
 *
 *    This test is to ensure that init_effectors properly handles surface
 *    macromolecules.  Most of the information is conveyed by the time 0 viz
 *    output, but the forward reaction rate has been cranked up enough to see
 *    from the reaction data also whether the molecules were placed.  The
 *    complexes are at the center of each face, the middle of each edge, and on
 *    each corner of the box.  The subunits should conform to the corners of
 *    the box as appropriate.
 *
 *    Note, in particular, that if the complexes (or resultant subunits) were
 *    placed with incorrect orientation, we expect that close to 66% of the
 *    dimer pairs will be in the doubly-bound state, 16% will be in the
 *    singly-bound state, and 16% should perpetually be in the unbound state (1
 *    of the dimer pairs from each ring is intentionally placed with the wrong
 *    orientation to react).
 *
 * Author: Jed Wing <jed@salk.edu>
 * Date:   2008-04-04
 ****************************************************************************/

basename = "04-macro_surface_init"
countdir = "dat/" & basename & "/"
vizdir   = "./viz_dat/" & basename & "/"
sprintf(seed, "%04g", SEED)
dt = 1e-6
iterations=300000

INCLUDE_FILE="parameters.mdl"

TIME_STEP = dt
ITERATIONS = iterations
GRID_DENSITY = 15000
ACCURATE_3D_REACTIONS = FALSE

CHECKPOINT_OUTFILE=basename & ".cp"
CHECKPOINT_INFILE=basename & ".cp"
CHECKPOINT_ITERATIONS=30000

PARTITION_X = [[-0.5001 TO 0.50001 STEP 0.02]]
PARTITION_Y = [[-0.5001 TO 0.50001 STEP 0.02]]
PARTITION_Z = [[-0.5001 TO 0.50001 STEP 0.02]]

DEFINE_MOLECULES {
  camkii_subunit  { DIFFUSION_CONSTANT_2D = 0 }
  camkii_subunitB { DIFFUSION_CONSTANT_2D = 0 }
  cam             { DIFFUSION_CONSTANT_3D = cam_diffusion }
}

DEFINE_COMPLEX_MOLECULE camkii {
  NUMBER_OF_SUBUNITS = [2, 6]
  SUBUNIT[1  , 1  ] = camkii_subunit'
  SUBUNIT[2  , 1  ] = camkii_subunit,
  SUBUNIT[1:2, 2  ] = camkii_subunit,
  SUBUNIT[1:2, 3:6] = camkii_subunit'
  SHAPE {
    SUBUNIT[1, 1] = [-.11,  .0000, 0]
    SUBUNIT[1, 2] = [-.06,  .0866, 0]
    SUBUNIT[1, 3] = [ .06,  .0866, 0]
    SUBUNIT[1, 4] = [ .11,  .0000, 0]
    SUBUNIT[1, 5] = [ .06, -.0866, 0]
    SUBUNIT[1, 6] = [-.06, -.0866, 0]

    SUBUNIT[2, 1] = [-.09,  .0000, 0]
    SUBUNIT[2, 2] = [-.04,  .0866, 0]
    SUBUNIT[2, 3] = [ .04,  .0866, 0]
    SUBUNIT[2, 4] = [ .09,  .0000, 0]
    SUBUNIT[2, 5] = [ .04, -.0866, 0]
    SUBUNIT[2, 6] = [-.04, -.0866, 0]
  }
  SUBUNIT_RELATIONSHIPS {
    ring_negative = [ 0, -1]
    ring_positive = [ 0, +1]
    dimer_partner = [+1,  0]
  }
  RATE_RULES {
    coop_binding_rate {
      dimer_partner != camkii_subunit : fw_rate * TMP_spec_F
      DEFAULT : fw_rate
    }
    coop_unbinding_rate {
      dimer_partner != camkii_subunit : bw_rate * TMP_spec_B
      DEFAULT : bw_rate
    }
  }
}

DEFINE_REACTIONS {
  (camkii_subunit') + cam, <-> (camkii_subunitB')   [> COMPLEX_RATE camkii coop_binding_rate,
                                                     < COMPLEX_RATE camkii coop_unbinding_rate]
}

DEFINE_SURFACE_CLASSES {
  class1 { MOLECULE_NUMBER { camkii' = 20 } }
  class2 { MOLECULE_DENSITY { camkii' = 200.0 / 3200.0 } }
  class3 { MOLECULE_NUMBER { camkii; = 25 } }
}

mainbox OBJECT {
  b BOX {
    CORNERS = [ -0.5, -0.5, -0.5 ], [ 0.5, 0.5, 0.5 ]
    DEFINE_SURFACE_REGIONS {
      top    { ELEMENT_LIST = [TOP]    SURFACE_CLASS = class1 }
      left   { ELEMENT_LIST = [LEFT]   SURFACE_CLASS = class2 }
      front  { ELEMENT_LIST = [FRONT]  SURFACE_CLASS = class3 }
      bottom { ELEMENT_LIST = [BOTTOM] MOLECULE_NUMBER { camkii, = 20 } }
      right  { ELEMENT_LIST = [RIGHT]  MOLECULE_NUMBER  { camkii, = 200.0 } }
      back   { ELEMENT_LIST = [BACK]   MOLECULE_DENSITY { camkii; = 200.0 / 3200.0 } }
    }
  }
}

INSTANTIATE world OBJECT
{
  mainbox OBJECT mainbox {
  }


  rs2 RELEASE_SITE {
    SHAPE = world.mainbox.b[ALL]
    MOLECULE = cam
    NUMBER_TO_RELEASE = num_cam
  }
}

VIZ_OUTPUT
{
  MODE = DREAMM_V3_GROUPED
  FILENAME = vizdir & "world." & seed
  MOLECULES {
    NAME_LIST { ALL_MOLECULES }
    ITERATION_NUMBERS { ALL_DATA @ [[0 TO 100000000 STEP 100]] }
  }
  MESHES {
    NAME_LIST { ALL_MESHES }
    ITERATION_NUMBERS { ALL_DATA @ [0] }
  }
}

REACTION_DATA_OUTPUT
{
  OUTPUT_BUFFER_SIZE = 10
  ITERATION_LIST = [[0 TO 9999 STEP 100], [10000 TO 250000 STEP 10000], [250001 TO 1250000 STEP 1]]

  /* 00 counts (non-inverted) */
  {COUNT[SUBUNIT{camkii : camkii_subunit  [dimer_partner==camkii_subunit  ]}, WORLD]} => countdir & "coop_m00xx." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunit '[dimer_partner==camkii_subunit  ]}, WORLD]} => countdir & "coop_m00ux." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunit ,[dimer_partner==camkii_subunit  ]}, WORLD]} => countdir & "coop_m00dx." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunit  [dimer_partner==camkii_subunit ']}, WORLD]} => countdir & "coop_m00xu." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunit  [dimer_partner==camkii_subunit ,]}, WORLD]} => countdir & "coop_m00xd." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunit '[dimer_partner==camkii_subunit ,]}, WORLD]} => countdir & "coop_m00ud." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunit ,[dimer_partner==camkii_subunit ']}, WORLD]} => countdir & "coop_m00du." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunit '[dimer_partner==camkii_subunit ']}, WORLD]} => countdir & "coop_m00uu." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunit ,[dimer_partner==camkii_subunit ,]}, WORLD]} => countdir & "coop_m00dd." & seed & ".dat"

  /* 00 counts (inverted) */
  {COUNT[SUBUNIT{camkii : camkii_subunit  [dimer_partner!=camkii_subunitB ]}, WORLD]} => countdir & "coop_im00xx." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunit '[dimer_partner!=camkii_subunitB ]}, WORLD]} => countdir & "coop_im00ux." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunit ,[dimer_partner!=camkii_subunitB ]}, WORLD]} => countdir & "coop_im00dx." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunit  [dimer_partner!=camkii_subunitB']}, WORLD]} => countdir & "coop_im00xu." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunit  [dimer_partner!=camkii_subunitB,]}, WORLD]} => countdir & "coop_im00xd." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunit '[dimer_partner!=camkii_subunitB,]}, WORLD]} => countdir & "coop_im00ud." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunit ,[dimer_partner!=camkii_subunitB']}, WORLD]} => countdir & "coop_im00du." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunit '[dimer_partner!=camkii_subunitB']}, WORLD]} => countdir & "coop_im00uu." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunit ,[dimer_partner!=camkii_subunitB,]}, WORLD]} => countdir & "coop_im00dd." & seed & ".dat"

  /* 01 counts (non-inverted) */
  {COUNT[SUBUNIT{camkii : camkii_subunit  [dimer_partner==camkii_subunitB ]}, WORLD]} => countdir & "coop_m01xx." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunit '[dimer_partner==camkii_subunitB ]}, WORLD]} => countdir & "coop_m01ux." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunit ,[dimer_partner==camkii_subunitB ]}, WORLD]} => countdir & "coop_m01dx." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunit  [dimer_partner==camkii_subunitB']}, WORLD]} => countdir & "coop_m01xu." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunit  [dimer_partner==camkii_subunitB,]}, WORLD]} => countdir & "coop_m01xd." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunit '[dimer_partner==camkii_subunitB,]}, WORLD]} => countdir & "coop_m01ud." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunit ,[dimer_partner==camkii_subunitB']}, WORLD]} => countdir & "coop_m01du." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunit '[dimer_partner==camkii_subunitB']}, WORLD]} => countdir & "coop_m01uu." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunit ,[dimer_partner==camkii_subunitB,]}, WORLD]} => countdir & "coop_m01dd." & seed & ".dat"

  /* 01 counts (inverted) */
  {COUNT[SUBUNIT{camkii : camkii_subunit  [dimer_partner!=camkii_subunit  ]}, WORLD]} => countdir & "coop_im01xx." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunit '[dimer_partner!=camkii_subunit  ]}, WORLD]} => countdir & "coop_im01ux." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunit ,[dimer_partner!=camkii_subunit  ]}, WORLD]} => countdir & "coop_im01dx." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunit  [dimer_partner!=camkii_subunit ']}, WORLD]} => countdir & "coop_im01xu." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunit  [dimer_partner!=camkii_subunit ,]}, WORLD]} => countdir & "coop_im01xd." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunit '[dimer_partner!=camkii_subunit ,]}, WORLD]} => countdir & "coop_im01ud." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunit ,[dimer_partner!=camkii_subunit ']}, WORLD]} => countdir & "coop_im01du." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunit '[dimer_partner!=camkii_subunit ']}, WORLD]} => countdir & "coop_im01uu." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunit ,[dimer_partner!=camkii_subunit ,]}, WORLD]} => countdir & "coop_im01dd." & seed & ".dat"

  /* 10 counts (non-inverted) */
  {COUNT[SUBUNIT{camkii : camkii_subunitB [dimer_partner==camkii_subunit  ]}, WORLD]} => countdir & "coop_m10xx." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunitB'[dimer_partner==camkii_subunit  ]}, WORLD]} => countdir & "coop_m10ux." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunitB,[dimer_partner==camkii_subunit  ]}, WORLD]} => countdir & "coop_m10dx." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunitB [dimer_partner==camkii_subunit ']}, WORLD]} => countdir & "coop_m10xu." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunitB [dimer_partner==camkii_subunit ,]}, WORLD]} => countdir & "coop_m10xd." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunitB'[dimer_partner==camkii_subunit ,]}, WORLD]} => countdir & "coop_m10ud." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunitB,[dimer_partner==camkii_subunit ']}, WORLD]} => countdir & "coop_m10du." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunitB'[dimer_partner==camkii_subunit ']}, WORLD]} => countdir & "coop_m10uu." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunitB,[dimer_partner==camkii_subunit ,]}, WORLD]} => countdir & "coop_m10dd." & seed & ".dat"

  /* 10 counts (inverted) */
  {COUNT[SUBUNIT{camkii : camkii_subunitB [dimer_partner!=camkii_subunitB ]}, WORLD]} => countdir & "coop_im10xx." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunitB'[dimer_partner!=camkii_subunitB ]}, WORLD]} => countdir & "coop_im10ux." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunitB,[dimer_partner!=camkii_subunitB ]}, WORLD]} => countdir & "coop_im10dx." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunitB [dimer_partner!=camkii_subunitB']}, WORLD]} => countdir & "coop_im10xu." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunitB [dimer_partner!=camkii_subunitB,]}, WORLD]} => countdir & "coop_im10xd." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunitB'[dimer_partner!=camkii_subunitB,]}, WORLD]} => countdir & "coop_im10ud." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunitB,[dimer_partner!=camkii_subunitB']}, WORLD]} => countdir & "coop_im10du." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunitB'[dimer_partner!=camkii_subunitB']}, WORLD]} => countdir & "coop_im10uu." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunitB,[dimer_partner!=camkii_subunitB,]}, WORLD]} => countdir & "coop_im10dd." & seed & ".dat"

  /* 11 counts (non-inverted) */
  {COUNT[SUBUNIT{camkii : camkii_subunitB [dimer_partner==camkii_subunitB ]}, WORLD]} => countdir & "coop_m11xx." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunitB'[dimer_partner==camkii_subunitB ]}, WORLD]} => countdir & "coop_m11ux." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunitB,[dimer_partner==camkii_subunitB ]}, WORLD]} => countdir & "coop_m11dx." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunitB [dimer_partner==camkii_subunitB']}, WORLD]} => countdir & "coop_m11xu." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunitB [dimer_partner==camkii_subunitB,]}, WORLD]} => countdir & "coop_m11xd." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunitB'[dimer_partner==camkii_subunitB,]}, WORLD]} => countdir & "coop_m11ud." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunitB,[dimer_partner==camkii_subunitB']}, WORLD]} => countdir & "coop_m11du." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunitB'[dimer_partner==camkii_subunitB']}, WORLD]} => countdir & "coop_m11uu." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunitB,[dimer_partner==camkii_subunitB,]}, WORLD]} => countdir & "coop_m11dd." & seed & ".dat"

  /* 11 counts (inverted) */
  {COUNT[SUBUNIT{camkii : camkii_subunitB [dimer_partner!=camkii_subunit  ]}, WORLD]} => countdir & "coop_im11xx." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunitB'[dimer_partner!=camkii_subunit  ]}, WORLD]} => countdir & "coop_im11ux." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunitB,[dimer_partner!=camkii_subunit  ]}, WORLD]} => countdir & "coop_im11dx." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunitB [dimer_partner!=camkii_subunit ']}, WORLD]} => countdir & "coop_im11xu." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunitB [dimer_partner!=camkii_subunit ,]}, WORLD]} => countdir & "coop_im11xd." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunitB'[dimer_partner!=camkii_subunit ,]}, WORLD]} => countdir & "coop_im11ud." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunitB,[dimer_partner!=camkii_subunit ']}, WORLD]} => countdir & "coop_im11du." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunitB'[dimer_partner!=camkii_subunit ']}, WORLD]} => countdir & "coop_im11uu." & seed & ".dat"
  {COUNT[SUBUNIT{camkii : camkii_subunitB,[dimer_partner!=camkii_subunit ,]}, WORLD]} => countdir & "coop_im11dd." & seed & ".dat"

  /* Traditional counts */
  {COUNT[camkii_subunit, WORLD]}               => countdir & "coop_camkii."    & seed & ".dat"
  {COUNT["camkii_subunit,", world.mainbox.b]}  => countdir & "coop_camkii_d."  & seed & ".dat"
  {COUNT["camkii_subunit'", world.mainbox.b]}  => countdir & "coop_camkii_u."  & seed & ".dat"
  {COUNT[camkii_subunitB, WORLD]}              => countdir & "coop_camkiiB."   & seed & ".dat"
  {COUNT["camkii_subunitB,", world.mainbox.b]} => countdir & "coop_camkiiB_d." & seed & ".dat"
  {COUNT["camkii_subunitB'", world.mainbox.b]} => countdir & "coop_camkiiB_u." & seed & ".dat"
  {COUNT[cam, WORLD]}                          => countdir & "coop_cam."       & seed & ".dat"
}
