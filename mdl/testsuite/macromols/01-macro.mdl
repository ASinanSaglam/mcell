/****************************************************************************
 * Test 01: Simple volume macromolecules.
 *
 *    This case is simple enough that it may be solved analytically.  When I
 *    was originally working on the macromolecules, I compared against the
 *    analytically derived solution.
 *
 *    The analyically derived solution is:
 *        d_0 ~595.7
 *        d_1 ~175.3
 *        d_2 ~129.0
 *
 *    where d_0 is the number of dimer partners in the doubly-unbound state,
 *    d_1 is the number in the singly-bound state, and d_2 is the number in the
 *    doubly-bound state.  The counts below relate in the following way:
 *
 *      coop_m00 -> 2*d_0  (number of subunits in doubly unbound dimer pairs)
 *      coop_m01 -> d_1    (number of bound subunits with unbound partners)
 *      coop_m10 -> d_1    (number of unbound subunits with bound partners)
 *      coop_m11 -> 2*d_2  (number of subunits in doubly bound dimer pairs)
 *
 *    coop_m01 and coop_m10 should be in agreement at all times.
 *
 * Author: Jed Wing <jed@salk.edu>
 * Date:   2008-04-04
 ****************************************************************************/

basename = "01-macro"
countdir = "dat/" & basename & "/"
vizdir   = "./viz_dat/" & basename & "/"
sprintf(seed, "%04g", SEED)

dt = 1e-6
iterations=1250000

INCLUDE_FILE="parameters.mdl"

TIME_STEP = dt
ITERATIONS = iterations
GRID_DENSITY = 15000
ACCURATE_3D_REACTIONS = FALSE

PARTITION_X = [[-0.5001 TO 0.50001 STEP 0.02]]
PARTITION_Y = [[-0.5001 TO 0.50001 STEP 0.02]]
PARTITION_Z = [[-0.5001 TO 0.50001 STEP 0.02]]

DEFINE_MOLECULES {
  camkii_subunit  { DIFFUSION_CONSTANT_3D = 0 }
  camkii_subunitB { DIFFUSION_CONSTANT_3D = 0 }
  cam             { DIFFUSION_CONSTANT_3D = cam_diffusion }
}

DEFINE_COMPLEX_MOLECULE camkii {
  NUMBER_OF_SUBUNITS = [2, 6]
  SUBUNIT[  1, 2:4] = camkii_subunit
  SUBUNIT[1:2, 1:3] = camkii_subunit
  SUBUNIT[1:2,   5] = camkii_subunit
  SUBUNIT[  1,   6] = camkii_subunitB
  SUBUNIT[  2,   6] = camkii_subunitB
  SUBUNIT[  2,   4] = camkii_subunitB
  SUBUNIT[1:2, 1:6] = camkii_subunit
  SHAPE {
    SUBUNIT[1, 1] = [-.10,  .0000,  .05]
    SUBUNIT[1, 2] = [ .05,  .0866,  .05]
    SUBUNIT[1, 3] = [ .05,  .0866,  .05]
    SUBUNIT[1, 4] = [ .10,  .0000,  .05]
    SUBUNIT[1, 5] = [ .05, -.0866,  .05]
    SUBUNIT[1, 6] = [-.05, -.0866,  .05]
    SUBUNIT[2, 1] = [-.10,  .0000, -.05]
    SUBUNIT[2, 2] = [-.05,  .0866, -.05]
    SUBUNIT[2, 3] = [ .05,  .0866, -.05]
    SUBUNIT[2, 4] = [ .10,  .0000, -.05]
    SUBUNIT[2, 5] = [ .05, -.0866, -.05]
    SUBUNIT[2, 6] = [-.05, -.0866, -.05]
  }
  SUBUNIT_RELATIONSHIPS {
    ring_negative = [ 0, -1]
    ring_positive = [ 0, +1]
    dimer_partner = [+1,  0]
  }
  RATE_RULES {
    coop_binding_rate {
      dimer_partner != camkii_subunit : fw_rate * TMP_spec_F
      DEFAULT : fw_rate
    }
    coop_unbinding_rate {
      dimer_partner != camkii_subunit : bw_rate * TMP_spec_B
      DEFAULT : bw_rate
    }
  }
}

DEFINE_REACTIONS {
  (camkii_subunit) + cam <-> (camkii_subunitB)   [> COMPLEX_RATE camkii coop_binding_rate,
                                                  < COMPLEX_RATE camkii coop_unbinding_rate]
}

mainbox OBJECT {
  b BOX {
    CORNERS = [ -0.5, -0.5, -0.5 ], [ 0.5, 0.5, 0.5 ]
  }
}

INSTANTIATE world OBJECT
{
  mainbox OBJECT mainbox {
  }

  rs1 RELEASE_SITE {
    SHAPE = world.mainbox.b[ALL]
    MOLECULE = camkii
    NUMBER_TO_RELEASE = num_complexes
  }

  rs2 RELEASE_SITE {
    SHAPE = world.mainbox.b[ALL]
    MOLECULE = cam
    NUMBER_TO_RELEASE = num_cam
  }
}

VIZ_OUTPUT
{
  MODE = DREAMM_V3_GROUPED
  FILENAME = vizdir & "world." & seed
  MOLECULES {
    NAME_LIST { ALL_MOLECULES }
    ITERATION_NUMBERS { ALL_DATA @ [[0 TO 100000000 STEP 100]] }
  }
  MESHES {
    NAME_LIST { ALL_MESHES }
    ITERATION_NUMBERS { ALL_DATA @ [0] }
  }
}

REACTION_DATA_OUTPUT
{
    OUTPUT_BUFFER_SIZE = 10
    ITERATION_LIST = [[0 TO 9999 STEP 100], [10000 TO 250000 STEP 10000], [250001 TO 1250000 STEP 1]]
    {COUNT[SUBUNIT{camkii:camkii_subunit[dimer_partner==camkii_subunit]}, WORLD]}  => countdir & "coop_m00." & seed & ".dat"
    {COUNT[SUBUNIT{camkii:camkii_subunit[dimer_partner!=camkii_subunit]}, WORLD]}  => countdir & "coop_m01." & seed & ".dat"
    {COUNT[SUBUNIT{camkii:camkii_subunitB[dimer_partner==camkii_subunit]}, WORLD]} => countdir & "coop_m10." & seed & ".dat"
    {COUNT[SUBUNIT{camkii:camkii_subunitB[dimer_partner!=camkii_subunit]}, WORLD]} => countdir & "coop_m11." & seed & ".dat"
    {COUNT[cam, WORLD]} => countdir & "coop_cam." & seed & ".dat"
}
