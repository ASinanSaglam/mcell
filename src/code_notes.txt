
Notes on MCell3


By convention "time" means time in internal simulation time units
  and "real time" means time in seconds.

check on usage of struct species->species_id in viz_output.c when we get there...
  how do we use it, do we need it etc...

in struct species, do we really need D_ref?
  Ask Joel.


in struct species, do we really need separate viz_state and region_viz_value?
  Ask Joel and Boris.


In react_cond.c, check_probs(), fix printfs (should they be fprintfs or deleted?)

in mdlparse.y, will we ever need reaction groups?


in struct rxn, fix comment on rxn->next according to actual usage in prepare_reactions().


change struct molecule to struct volume_molecule !!!
change struct grid_molecule to struct surface_molecule !

change name of struct wall->effectors (to grid?)

Label subset of species flags that pertain to counting as "Count Flags".

check how we handle the lack of struct surface_grid->binding_factor during a
  reaction between a volume molecule and a surface species.  Surface_grid is NULL until
  a grid molecule is placed on the wall, but we need struct surface_grid->binding_factor
  to calculate reaction probability.

check how we initialize struct surface_grid->subvol (which subvol owns surface_grid?).

It would save ~40% of struct subvolume memory usage if we got rid of BSP trees and
  therefore did not need struct subvolume->neighbor.  As the code is now written
  we don't actually allocate a single struct bsp_tree anywhere.


Use struct volume->speed_limit to set safe time step.

Change viz output to use scheduler.

Revisit struct volume->output_* after Rex finishes new counting code

Boris should comment struct volume viz_*

Actually track and report random_number_use, ray_voxel_tests, etc...
